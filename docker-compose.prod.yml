services:
  # WebSocket/HTTP Server (Production)
  websocket-server:
    image: ${DOCKER_REGISTRY:-ghcr.io}/${DOCKER_ORG:-yourusername}/coachntt-websocket:${VERSION:-latest}
    container_name: coachntt-websocket
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      # Use named volumes for production
      - coachntt-data:/app/data
      - coachntt-logs:/app/logs
      - coachntt-projects:/app/projects
      - coachntt-docs:/app/docs/generated
      - ./templates:/app/templates:ro  # Read-only templates
    environment:
      - NODE_ENV=production
      - MCP_WEBSOCKET_AUTH=${MCP_WEBSOCKET_AUTH}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DB_PATH=/app/data/myworkflow.db
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: always
    networks:
      - coachntt-network

  # UI Dashboard (Production)
  ui-dashboard:
    image: ${DOCKER_REGISTRY:-ghcr.io}/${DOCKER_ORG:-yourusername}/coachntt-ui:${VERSION:-latest}
    container_name: coachntt-ui
    ports:
      - "5173:80"
    environment:
      - VITE_WS_URL=${PUBLIC_WS_URL:-ws://localhost:8080}
    depends_on:
      - websocket-server
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: always
    networks:
      - coachntt-network

  # Nginx Reverse Proxy for VPS
  nginx-proxy:
    image: nginx:alpine
    container_name: coachntt-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/vps.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - coachntt-certbot:/var/www/certbot:ro
    depends_on:
      - websocket-server
      - ui-dashboard
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: always
    networks:
      - coachntt-network

  # Certbot for SSL (Let's Encrypt)
  certbot:
    image: certbot/certbot:latest
    container_name: coachntt-certbot
    volumes:
      - coachntt-certbot:/var/www/certbot
      - ./nginx/ssl:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: always

  # Backup service
  backup:
    image: alpine:latest
    container_name: coachntt-backup
    volumes:
      - coachntt-data:/backup/data:ro
      - coachntt-logs:/backup/logs:ro
      - coachntt-projects:/backup/projects:ro
      - ./backups:/backups
    environment:
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}  # 2 AM daily
    command: |
      sh -c 'apk add --no-cache tar gzip && \
             echo "$${BACKUP_SCHEDULE} cd /backup && tar -czf /backups/backup-$$(date +%Y%m%d-%H%M%S).tar.gz data logs projects" | crontab - && \
             crond -f'
    restart: always

networks:
  coachntt-network:
    driver: bridge
    name: coachntt-network

volumes:
  coachntt-data:
    driver: local
  coachntt-logs:
    driver: local
  coachntt-projects:
    driver: local
  coachntt-docs:
    driver: local
  coachntt-certbot:
    driver: local